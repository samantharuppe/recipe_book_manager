import json 

def load_recipes():
    try:
        with open('recipes.json', 'r') as file:
            return json.load(file)
    except FileNotFoundError:
        return []

def save_recipes(recipes):
    with open('recipes.json', 'w') as file:
        json.dump(recipes, file, indent=4)

def add_recipe(name, ingredients, instructions):
    recipes = load_recipes()
    recipes.append({
        'name': name,
        'ingredients': ingredients,
        'instructions': instructions
    })
    save_recipes(recipes)
    print(f"Recipe '{name}' added successfully!")

def view_recipes():
    recipes = load_recipes()
    if not recipes:
        print("No recipes found.")
    else:
        for i, recipe in enumerate(recipes, 1):
            print(f"\nRecipe {i}:")
            print(f"Name: {recipe['name']}")
            print(f"Ingredients: {', '.join(recipe['ingredients'])}")
            print(f"Instructions: {recipe['instructions']}\n")

def edit_recipe(index, name, ingredients, instructions):
    recipes = load_recipes()
    if 0 <= index < len(recipes):
        recipes[index] = {
            'name': name,
            'ingredients': ingredients,
            'instructions': instructions
        }
        save_recipes(recipes)
        print(f"Recipe {index + 1} updated successfully!")
    else:
        print("Invalid recipe index.")

def delete_recipe(index):
    recipes = load_recipes()
    if 0 <= index < len(recipes):
        deleted_recipe = recipes.pop(index)
        save_recipes(recipes)
        print(f"Deleted Recipe {index + 1}: {deleted_recipe['name']}")
    else:
        print("Invalid recipe index.")

while True:
    print("\nRecipe Manager")
    print("1. Add Recipe")
    print("2. View Recipes")
    print("3. Edit Recipe")
    print("4. Delete Recipe")
    print("5. Exit")
    
    choice = input("Enter your choice: ")


#a set up of how the choices are able to allow users to edit, add, delete, and view recipes
    if choice == '1':
        name = input("Enter recipe name: ")
        ingredients = input("Enter ingredients (separated by commas): ").split(',')
        instructions = input("Enter instructions: ")
        add_recipe(name, ingredients, instructions)
    elif choice == '2':
        view_recipes()
    elif choice == '3':
        index = int(input("Enter recipe index to edit: ")) - 1
        name = input("Enter new recipe name: ")
        ingredients = input("Enter new ingredients (separated by commas): ").split(',')
        instructions = input("Enter new instructions: ")
        edit_recipe(index, name, ingredients, instructions)
    elif choice == '4':
        index = int(input("Enter recipe index to delete: ")) - 1
        delete_recipe(index)
    elif choice == '5':
        break
    else:
        print("Invalid choice. Please enter a valid option.") 
